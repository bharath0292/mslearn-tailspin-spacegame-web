trigger:
  - '*'
pool:
  vmImage: 'ubuntu-20.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '5.x'

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET SDK $(dotnetSdkVersion)'
    inputs:
      packageType: sdk
      version: '$(dotnetSdkVersion)'
      
  - task: Npm@1
    displayName: 'Run npm install'
    inputs:
      verbose: false

  - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
    displayName: 'Compile Sass assets'

  - task: gulp@1
    displayName: 'Run gulp tasks'

  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt && pwd'
    displayName: 'Write build info'
    workingDirectory: $(wwwrootDir)

  - task: DotNetCoreCLI@2
    displayName: 'Restore project dependencies'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - template: templates\build.yml
    parameters:
      buildConfiguration: 'Release'

  - task: DotNetCoreCLI@2
    displayName: 'Install .Net tools from local manifest'
    inputs:
      command: custom
      custom: tool
      arguments: 'restore'

  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests - $(buildConfiguration)'
    inputs:
      command: 'test'
      arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
      publishTestResults: true
      projects: '**/*.Tests.csproj'
  
  - task: DotNetCoreCLI@2
    displayName: 'Create Code coverage report'
    inputs:
      command: custom
      custom: tool
      arguments: 'run reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Code coverage result'
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'

  - template: templates\publish.yml
    parameters:
      buildConfiguration: 'Release'
    
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    condition: succeeded()